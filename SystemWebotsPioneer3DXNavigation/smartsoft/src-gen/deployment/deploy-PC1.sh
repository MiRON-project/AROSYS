#!/bin/bash
#--------------------------------------------------------------------------
# Code generated by the SmartSoft MDSD Toolchain
# The SmartSoft Toolchain has been developed by:
#  
# Service Robotics Research Center
# University of Applied Sciences Ulm
# Prittwitzstr. 10
# 89075 Ulm (Germany)
#
# Information about the SmartSoft MDSD Toolchain is available at:
# www.servicerobotik-ulm.de
#
# Please do not modify this file. It will be re-generated
# running the code generator.
#--------------------------------------------------------------------------
#
# run this script from the component's root folder to deploy the scenario to device.
#

TARGET_SSHUSER=
TARGET_IP=localhost
TARGET_DIRECTORY="/tmp"
DEPLOYMENT_DIRECTORY=SystemWebotsPioneer3DXNavigation.deployment/

echo "#######################################################"
echo "## Deployment of Device PC1 / $TARGET_IP"
echo "#######################################################"
echo "Target SSH user:      $TARGET_SSHUSER"
echo "Target IP:            $TARGET_IP"
echo "Target directory:     $TARGET_DIRECTORY"
echo "Deployment directory: $DEPLOYMENT_DIRECTORY"

echo "Working directory of deployment script: "`pwd`

echo Sourcing referenced projects
source src-gen/deployment/referenced-projects

DEPLOY_LIBRARIES_USER=""
###############################
echo "Sourcing pre-deployment script for ComponentLaserObstacleAvoidTest... (errors might be ignored)"
DEPLOY_LIBRARIES=""
DEPLOY_COMPONENT_FILES=""
source src/predeploy-ComponentLaserObstacleAvoidTest.sh 2>&1

for I in $DEPLOY_LIBRARIES; do
	if [ -e "$SMART_ROOT_ACE/bin/$I" ]; then
		FILE="$SMART_ROOT_ACE/bin/$I"
	else
		FILE="$SMART_ROOT_ACE/lib/$I"
	fi
	DEPLOY_LIBRARIES_USER="$DEPLOY_LIBRARIES_USER $FILE"
done

DEPLOY_COMPONENT_FILES_PATHS_ComponentLaserObstacleAvoidTest=""
for I in $DEPLOY_COMPONENT_FILES; do
	if ls $REFERENCED_PROJECT_ComponentLaserObstacleAvoidTest/$I > /dev/null 2>&1; then
		DEPLOY_COMPONENT_FILES_PATHS_ComponentLaserObstacleAvoidTest="$DEPLOY_COMPONENT_FILES_PATHS_ComponentLaserObstacleAvoidTest $REFERENCED_PROJECT_ComponentLaserObstacleAvoidTest/$I"
	elif ls $I > /dev/null 2>&1; then
		DEPLOY_COMPONENT_FILES_PATHS_ComponentLaserObstacleAvoidTest="$DEPLOY_COMPONENT_FILES_PATHS_ComponentLaserObstacleAvoidTest $I"
	fi
done

#########################
## BEHAVIOR FILES
shopt -u | grep -q nullglob && changed=true && shopt -s nullglob
for entry in "$REFERENCED_PROJECT_ComponentLaserObstacleAvoidTest"/model/*.smartTcl
do
  DEPLOY_COMPONENT_BEHAVIOR_MODEL_FILES_ComponentLaserObstacleAvoidTest="$DEPLOY_COMPONENT_TCL_MODEL_FILES_ComponentLaserObstacleAvoidTest $entry"
done
[ $changed ] && shopt -u nullglob; unset changed

echo "$DEPLOY_COMPONENT_BEHAVIOR_MODEL_FILES_ComponentLaserObstacleAvoidTest "
#########################

echo
###############################
 
###############################
echo "Sourcing pre-deployment script for ComponentWebots... (errors might be ignored)"
DEPLOY_LIBRARIES=""
DEPLOY_COMPONENT_FILES=""
source src/predeploy-ComponentWebots.sh 2>&1

for I in $DEPLOY_LIBRARIES; do
	if [ -e "$SMART_ROOT_ACE/bin/$I" ]; then
		FILE="$SMART_ROOT_ACE/bin/$I"
	else
		FILE="$SMART_ROOT_ACE/lib/$I"
	fi
	DEPLOY_LIBRARIES_USER="$DEPLOY_LIBRARIES_USER $FILE"
done

DEPLOY_COMPONENT_FILES_PATHS_ComponentWebots=""
for I in $DEPLOY_COMPONENT_FILES; do
	if ls $REFERENCED_PROJECT_ComponentWebots/$I > /dev/null 2>&1; then
		DEPLOY_COMPONENT_FILES_PATHS_ComponentWebots="$DEPLOY_COMPONENT_FILES_PATHS_ComponentWebots $REFERENCED_PROJECT_ComponentWebots/$I"
	elif ls $I > /dev/null 2>&1; then
		DEPLOY_COMPONENT_FILES_PATHS_ComponentWebots="$DEPLOY_COMPONENT_FILES_PATHS_ComponentWebots $I"
	fi
done

#########################
## BEHAVIOR FILES
shopt -u | grep -q nullglob && changed=true && shopt -s nullglob
for entry in "$REFERENCED_PROJECT_ComponentWebots"/model/*.smartTcl
do
  DEPLOY_COMPONENT_BEHAVIOR_MODEL_FILES_ComponentWebots="$DEPLOY_COMPONENT_TCL_MODEL_FILES_ComponentWebots $entry"
done
[ $changed ] && shopt -u nullglob; unset changed

echo "$DEPLOY_COMPONENT_BEHAVIOR_MODEL_FILES_ComponentWebots "
#########################

echo
###############################
 
###############################
echo "Sourcing pre-deployment script for ComponentWebotsLidarTest... (errors might be ignored)"
DEPLOY_LIBRARIES=""
DEPLOY_COMPONENT_FILES=""
source src/predeploy-ComponentWebotsLidarTest.sh 2>&1

for I in $DEPLOY_LIBRARIES; do
	if [ -e "$SMART_ROOT_ACE/bin/$I" ]; then
		FILE="$SMART_ROOT_ACE/bin/$I"
	else
		FILE="$SMART_ROOT_ACE/lib/$I"
	fi
	DEPLOY_LIBRARIES_USER="$DEPLOY_LIBRARIES_USER $FILE"
done

DEPLOY_COMPONENT_FILES_PATHS_ComponentWebotsLidarTest=""
for I in $DEPLOY_COMPONENT_FILES; do
	if ls $REFERENCED_PROJECT_ComponentWebotsLidarTest/$I > /dev/null 2>&1; then
		DEPLOY_COMPONENT_FILES_PATHS_ComponentWebotsLidarTest="$DEPLOY_COMPONENT_FILES_PATHS_ComponentWebotsLidarTest $REFERENCED_PROJECT_ComponentWebotsLidarTest/$I"
	elif ls $I > /dev/null 2>&1; then
		DEPLOY_COMPONENT_FILES_PATHS_ComponentWebotsLidarTest="$DEPLOY_COMPONENT_FILES_PATHS_ComponentWebotsLidarTest $I"
	fi
done

#########################
## BEHAVIOR FILES
shopt -u | grep -q nullglob && changed=true && shopt -s nullglob
for entry in "$REFERENCED_PROJECT_ComponentWebotsLidarTest"/model/*.smartTcl
do
  DEPLOY_COMPONENT_BEHAVIOR_MODEL_FILES_ComponentWebotsLidarTest="$DEPLOY_COMPONENT_TCL_MODEL_FILES_ComponentWebotsLidarTest $entry"
done
[ $changed ] && shopt -u nullglob; unset changed

echo "$DEPLOY_COMPONENT_BEHAVIOR_MODEL_FILES_ComponentWebotsLidarTest "
#########################

echo
###############################
 
###############################
echo "Sourcing pre-deployment script for ComponentWebotsPioneer3DX... (errors might be ignored)"
DEPLOY_LIBRARIES=""
DEPLOY_COMPONENT_FILES=""
source src/predeploy-ComponentWebotsPioneer3DX.sh 2>&1

for I in $DEPLOY_LIBRARIES; do
	if [ -e "$SMART_ROOT_ACE/bin/$I" ]; then
		FILE="$SMART_ROOT_ACE/bin/$I"
	else
		FILE="$SMART_ROOT_ACE/lib/$I"
	fi
	DEPLOY_LIBRARIES_USER="$DEPLOY_LIBRARIES_USER $FILE"
done

DEPLOY_COMPONENT_FILES_PATHS_ComponentWebotsPioneer3DX=""
for I in $DEPLOY_COMPONENT_FILES; do
	if ls $REFERENCED_PROJECT_ComponentWebotsPioneer3DX/$I > /dev/null 2>&1; then
		DEPLOY_COMPONENT_FILES_PATHS_ComponentWebotsPioneer3DX="$DEPLOY_COMPONENT_FILES_PATHS_ComponentWebotsPioneer3DX $REFERENCED_PROJECT_ComponentWebotsPioneer3DX/$I"
	elif ls $I > /dev/null 2>&1; then
		DEPLOY_COMPONENT_FILES_PATHS_ComponentWebotsPioneer3DX="$DEPLOY_COMPONENT_FILES_PATHS_ComponentWebotsPioneer3DX $I"
	fi
done

#########################
## BEHAVIOR FILES
shopt -u | grep -q nullglob && changed=true && shopt -s nullglob
for entry in "$REFERENCED_PROJECT_ComponentWebotsPioneer3DX"/model/*.smartTcl
do
  DEPLOY_COMPONENT_BEHAVIOR_MODEL_FILES_ComponentWebotsPioneer3DX="$DEPLOY_COMPONENT_TCL_MODEL_FILES_ComponentWebotsPioneer3DX $entry"
done
[ $changed ] && shopt -u nullglob; unset changed

echo "$DEPLOY_COMPONENT_BEHAVIOR_MODEL_FILES_ComponentWebotsPioneer3DX "
#########################

echo
###############################
 


DEPL_FILES="
$SMART_ROOT_ACE/lib/libAceSmartSoftKernel.so.*
$SMART_ROOT_ACE/lib/libSmartProperty.so.*
src-gen/deployment/tiler.sh
src-gen/deployment/start-PC1.sh
$SMART_ROOT_ACE/bin/NamingService
src-gen/deployment/ns_config.ini
src/ComponentLaserObstacleAvoidTest_data
src/startstop-hooks-ComponentLaserObstacleAvoidTest.sh
$SMART_ROOT_ACE/bin/ComponentLaserObstacleAvoidTest
src-gen/combined-ini-files/ComponentLaserObstacleAvoidTest.ini
$SMART_ROOT_ACE/lib/libCommBasicObjects.so*
src/ComponentWebots_data
src/startstop-hooks-ComponentWebots.sh
$SMART_ROOT_ACE/bin/ComponentWebots
src-gen/combined-ini-files/ComponentWebots.ini
src/ComponentWebotsLidarTest_data
src/startstop-hooks-ComponentWebotsLidarTest.sh
$SMART_ROOT_ACE/bin/ComponentWebotsLidarTest
src-gen/combined-ini-files/ComponentWebotsLidarTest.ini
$SMART_ROOT_ACE/lib/libCommBasicObjects.so*
src/ComponentWebotsPioneer3DX_data
src/startstop-hooks-ComponentWebotsPioneer3DX.sh
$SMART_ROOT_ACE/bin/ComponentWebotsPioneer3DX
src-gen/combined-ini-files/ComponentWebotsPioneer3DX.ini
$SMART_ROOT_ACE/lib/libCommBasicObjects.so*

$DEPLOY_LIBRARIES_USER
"

FILES_MISSING=false
for FILE in $DEPL_FILES; do
	if [ ! -e $FILE ]; then
		echo "Deployment: No such file or directory: $FILE"
		FILES_MISSING=true
	fi
done

if [ "$FILES_MISSING" = "true" ]; then
	echo
	echo "ERROR: FILES ARE MISSING FROM THE DEPLOYMENT (see above). Did you compile all components?"
	echo 
	exit 1
fi


if [ "$1" = "local" ]; then
	# local deployment
	mkdir -p $DEPLOYMENT_DIRECTORY
	rsync -l -r -v --progress --exclude ".svn" $DEPL_FILES $DEPLOYMENT_DIRECTORY/PC1
else
	# remote deployment
	SSH_TARGET=localhost:$TARGET_DIRECTORY/$DEPLOYMENT_DIRECTORY
	echo "Deployment to $SSH_TARGET"
	ssh localhost mkdir -p $TARGET_DIRECTORY/$DEPLOYMENT_DIRECTORY
	
	TMPDIR=$(mktemp -d --suffix=.deployment) || exit 1
	echo "Temporary directory: $TMPDIR"
	mkdir $TMPDIR/behaviorFiles
	trap "rm -rf $TMPDIR" EXIT
	
	# collect files in $TMPDIR
	#rsync -l -r -v --progress --exclude ".svn" $DEPL_FILES $TMPDIR/
	cp -rv $DEPL_FILES $TMPDIR 2>&1
#rsync -l -r -v --progress --exclude ".svn" $DEPLOY_COMPONENT_FILES_PATHS_ComponentLaserObstacleAvoidTest $TMPDIR/ComponentLaserObstacleAvoidTest_data/
if [ ! "$DEPLOY_COMPONENT_FILES_PATHS_ComponentLaserObstacleAvoidTest" = "" ]; then
	cp -rv $DEPLOY_COMPONENT_FILES_PATHS_ComponentLaserObstacleAvoidTest $TMPDIR/ComponentLaserObstacleAvoidTest_data/ 2>&1
fi

if [ ! "$DEPLOY_COMPONENT_BEHAVIOR_MODEL_FILES_ComponentLaserObstacleAvoidTest" = "" ]; then
	cp -rv $DEPLOY_COMPONENT_BEHAVIOR_MODEL_FILES_ComponentLaserObstacleAvoidTest $TMPDIR/behaviorFiles/ 2>&1
fi

cp -v $REFERENCED_PROJECT_ComponentLaserObstacleAvoidTest/smartsoft/src/startstop-hooks.sh $TMPDIR/startstop-hooks-component-ComponentLaserObstacleAvoidTest.sh 2>/dev/null
#rsync -l -r -v --progress --exclude ".svn" $DEPLOY_COMPONENT_FILES_PATHS_ComponentWebots $TMPDIR/ComponentWebots_data/
if [ ! "$DEPLOY_COMPONENT_FILES_PATHS_ComponentWebots" = "" ]; then
	cp -rv $DEPLOY_COMPONENT_FILES_PATHS_ComponentWebots $TMPDIR/ComponentWebots_data/ 2>&1
fi

if [ ! "$DEPLOY_COMPONENT_BEHAVIOR_MODEL_FILES_ComponentWebots" = "" ]; then
	cp -rv $DEPLOY_COMPONENT_BEHAVIOR_MODEL_FILES_ComponentWebots $TMPDIR/behaviorFiles/ 2>&1
fi

cp -v $REFERENCED_PROJECT_ComponentWebots/smartsoft/src/startstop-hooks.sh $TMPDIR/startstop-hooks-component-ComponentWebots.sh 2>/dev/null
#rsync -l -r -v --progress --exclude ".svn" $DEPLOY_COMPONENT_FILES_PATHS_ComponentWebotsLidarTest $TMPDIR/ComponentWebotsLidarTest_data/
if [ ! "$DEPLOY_COMPONENT_FILES_PATHS_ComponentWebotsLidarTest" = "" ]; then
	cp -rv $DEPLOY_COMPONENT_FILES_PATHS_ComponentWebotsLidarTest $TMPDIR/ComponentWebotsLidarTest_data/ 2>&1
fi

if [ ! "$DEPLOY_COMPONENT_BEHAVIOR_MODEL_FILES_ComponentWebotsLidarTest" = "" ]; then
	cp -rv $DEPLOY_COMPONENT_BEHAVIOR_MODEL_FILES_ComponentWebotsLidarTest $TMPDIR/behaviorFiles/ 2>&1
fi

cp -v $REFERENCED_PROJECT_ComponentWebotsLidarTest/smartsoft/src/startstop-hooks.sh $TMPDIR/startstop-hooks-component-ComponentWebotsLidarTest.sh 2>/dev/null
#rsync -l -r -v --progress --exclude ".svn" $DEPLOY_COMPONENT_FILES_PATHS_ComponentWebotsPioneer3DX $TMPDIR/ComponentWebotsPioneer3DX_data/
if [ ! "$DEPLOY_COMPONENT_FILES_PATHS_ComponentWebotsPioneer3DX" = "" ]; then
	cp -rv $DEPLOY_COMPONENT_FILES_PATHS_ComponentWebotsPioneer3DX $TMPDIR/ComponentWebotsPioneer3DX_data/ 2>&1
fi

if [ ! "$DEPLOY_COMPONENT_BEHAVIOR_MODEL_FILES_ComponentWebotsPioneer3DX" = "" ]; then
	cp -rv $DEPLOY_COMPONENT_BEHAVIOR_MODEL_FILES_ComponentWebotsPioneer3DX $TMPDIR/behaviorFiles/ 2>&1
fi

cp -v $REFERENCED_PROJECT_ComponentWebotsPioneer3DX/smartsoft/src/startstop-hooks.sh $TMPDIR/startstop-hooks-component-ComponentWebotsPioneer3DX.sh 2>/dev/null
	
	#collect and copy behavior related files
	echo "Sourcing behavior files..."
	test -f src-gen/deployment/deploy-behavior-files.sh && source src-gen/deployment/deploy-behavior-files.sh
	
	# actually deploy:
	rsync -z -l -r -v --progress --exclude ".svn" -e ssh $TMPDIR/ $SSH_TARGET
fi


if [ "$?" != "0" ]; then
	echo "ERROR: Files could not be deployed to remote host."
	#gdialog --title ERROR --msgbox "Files could not be deployed host."
	exit 1
fi

echo -e "\n\nDeployment to device PC1 finished.\n\n"
