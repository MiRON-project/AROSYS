//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------
#ifndef _TIAGOTASK_HH
#define _TIAGOTASK_HH

#include "TIAGoTaskCore.hh"

#include <webots/GPS.hpp>
#include <webots/Node.hpp>
#include <webots/Robot.hpp>
#include <webots/Motor.hpp>
#include <webots/Robot.hpp>
#include <webots/Device.hpp>
#include <webots/InertialUnit.hpp>

#include "CommBasicObjects/CommBaseState.hh"

#include <thread>

#define S_TO_MS 1000.0 // Conversion factor

// TIAGo specification
#define WHEEL_GAP    0.404  // in meter
#define WHEEL_RADIUS 0.1955 // in meter


class TIAGoTask  : public TIAGoTaskCore
{

private:
  int webotsTimeStep;
  bool GPSFound;
  bool IMUFound;
  double motorMaxSpeed; // in rad/s
  webots::GPS *webotsGPS;
  webots::Motor *webotsRightMotor;
  webots::Motor *webotsLeftMotor;
  webots::InertialUnit *webotsIMU;

  // threading stuff
  std::thread mThread;
  bool mThreadRunning;
  bool mWebotsShouldQuit;
  void runStep(webots::Robot *robot);

public:
	TIAGoTask(SmartACE::SmartComponent *comp);
	virtual ~TIAGoTask();
	
	virtual int on_entry();
	virtual int on_execute();
	virtual int on_exit();
};

#endif
